#include <stdio.h>
#include <stdlib.h>

void init (int m, int n, int zamin[n][m])          //برای مقدار دهی اولیه به زمین
{
    for (int i= 0; i< m; i++)
        for (int j=0; j< n; j++)
        zamin [j][i]= 32;
}
////////////////////////////////////////////////////////////////////////////////////////////////
int bord (int m, int n, int zamin [n][m], int player)     //چک کردن شرط برنده بودن
{
    int a= 0, b= 0, c=0;
    for (int i=0; i< n; i++)
        for (int j=0; j< m; j++)
    {
            for (int k=0; k< 4; k++)
            {
                if (zamin[i][j+k]== (64+player))
                a++;
            }
            //اریب
             for (int k=0; k< 4; k++)
            {
                if (zamin[i+ k][j+ k]== (64+player))
                b++;
            }
            //اریب
            for (int k=0; k< 4; k++)
            {
                if (zamin[i+ k][j- k]== (64+player))
                c++;
            }
            if ((a== 4) || (b== 4) || (c== 4))
                return 1;
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////
void set (int m, int n, int x, int zamin[n][m], int player)           //برای تشخیص نقاط بازیکن ها
{
    for (int i= n-1; i>= 0; i--)
    {
        if(zamin [i][x] != 32)
            continue;
        else
        {
            if (player== 1)
                zamin [i][x]= 65;
            else
                zamin[i][x]= 66;
            break;
        }
    }
}
////////////////////////////////////////////////////////////////////////////////////////////////
void print (int m, int n, int zamin[n][m])
{
    for (int i= 0; i< n; i++)
    {
        for (int j=0; j< m; j++)
            printf ("|%c ", zamin[i][j]);
            printf ("\n");
    }

}
////////////////////////////////////////////////////////////////////////////////////////////////
int tasavi (int m, int n, int zamin[n][m])
{
    int a=0;
    for (int i= 0; i< n; i++)
        for (int j=0; j< m; j++)
        {
            if (zamin [i][j] != 32)
                a++;
        }
        if (a== m*n)
            return 1;
            else return 0;
}
////////////////////////////////////////////////////////////////////////////////////////////////
int chek (int m, int n, int x, int zamin[n][m])    //شرط ممکن بودن انتخاب مختصات
{
    if ((zamin[0][x] != 32) || (x >= m))
    {
        printf ("You can t choose here*****choose again\n");
        return 0;
    }
        else
    return 1;
}
////////////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    int m, n, x;//m=طول زمین
    printf ("Hello dear !!\n Enter the size of playground::(length is first)\n");
    scanf ("%d", &m);
    printf ("Now the width:\n");
    scanf ("%d", &n);
    int zamin [n][m];
    init (m, n,zamin);
    /////////////////////////////////////////////////////
    while ((bord(m, n, zamin, 1)!= 1) || (bord(m, n, zamin, 2)!= 1) || (tasavi(m, n, zamin)!= 1))
    {
        printf ("Player one is your turn enter the column :\n");
        while(1)
        {
            scanf ("%d", &x);
            x--;
            if (chek(m, n, x, zamin)==0)
                continue;
            else
            {
            set ( m, n, x, zamin, 1);
            print(m, n, zamin);
            break;
            }
        }
        printf ("Player two is your turn enter the column :\n");
        while(1)
        {
            scanf ("%d", &x);
            x--;
            if (chek(m, n, x, zamin)==0)
                continue;
            else
            {
            set ( m, n, x, zamin, 2);
            print(m, n, zamin);
            break;
            }

        }
        printf ("%d %d %d",(bord(m, n, zamin, 1)== 1) , (bord(m, n, zamin, 2)== 1) , (tasavi(m, n, zamin)== 1) );
    }
    if (tasavi(m, n, zamin)== 1)
        printf ("We have not winner!!!");
    else
    {
        if (bord(m, n, zamin, 1)== 1)
        printf ("Player  one you are winner !!!!!!!");
    else
    if ((bord(m, n, zamin, 2)== 1))
        printf ("Player  two you are winner !!!!!!!");
    return 0;
    }

}

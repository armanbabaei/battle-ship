#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/////////////////////////////////////////////////////////////////////////////////////
//انواع بمب
void bomb (int m, int n, int *x, int *y, int *no_bomb, int zamin[m][n])
{
switch (*no_bomb)
{
    case 1:
            for (int i=0; i <m; i++)
                (zamin[i][*y]== 1)? (zamin[i][*y]= 42) : ((zamin[i][*y]== 0)? (zamin[i][*y]= 32) : 1);
        break;

    case 2:
            for (int i=0; i <n; i++)
                (zamin[*x][i]== 1)? (zamin[*x][i]= 42) : ((zamin[*x][i]== 0)? (zamin[*x][i]= 32) : 1);
        break;

    case 3:
        (zamin[0][0]== 1)? (zamin[0][0]= 42) : ((zamin[0][0]== 0)? (zamin[0][0]= 32): 1);
        (zamin[0][n-1]== 1)? (zamin[0][n-1]= 42) : ((zamin[0][n-1]== 0)? (zamin[0][n-1]= 32) : 1);
        (zamin[m-1][0]== 1)? (zamin[m-1][0]= 42) : ((zamin[m-1][0]== 0)? (zamin[m-1][0]= 32) : 1);
        (zamin[m-1][n-1]== 1)? (zamin[m-1][n-1]= 42) : ((zamin[m-1][n-1]== 0)? (zamin[m-1][n-1]= 32) : 1);
        break;

    case 4:
        (zamin[*x+1][*y-1]== 1)? (zamin[*x+1][*y-1]= 42) : ((zamin[*x+1][*y-1]== 0)? (zamin[*x+1][*y-1]= 32) : 1);
        (zamin[*x+1][*y]== 1)? (zamin[*x+1][*y]= 42) : ((zamin[*x+1][*y]== 0)? (zamin[*x+1][*y]= 32) : 1);
        (zamin[*x+1][*y+1]== 1)? (zamin[*x+1][*y+1]= 42) : ((zamin[*x+1][*y+1]== 0)? (zamin[*x+1][*y+1]= 32) : 1);
        (zamin[*x][*y-1]== 1)? (zamin[*x][*y-1]= 42) : ((zamin[*x][*y-1]== 0)? (zamin[*x][*y-1]= 32) : 1);
        (zamin[*x][*y+1]== 1)? (zamin[*x][*y+1]= 42) : ((zamin[*x][*y+1]== 0)? (zamin[*x][*y+1]= 32) : 1);
        (zamin[*x-1][*y-1]== 1)? (zamin[*x-1][*y-1]= 42) : ((zamin[*x-1][*y-1]== 0)? (zamin[*x-1][*y-1]= 32) : 1);
        (zamin[*x-1][*y]== 1)? (zamin[*x-1][*y]= 42) : ((zamin[*x-1][*y]== 0)? (zamin[*x-1][*y]= 32) : 1);
        (zamin[*x-1][*y+1]== 1)? (zamin[*x-1][*y+1]= 42) : ((zamin[*x-1][*y+1]== 0)? (zamin[*x-1][*y+1]= 32) : 1);
        break;
}
}
/////////////////////////////////////////////////////////////////////////////////////////
//برای صفردهی به زمین بازی
void initializer (int m, int n, int zamin[m][n])
{
for (int i=0; i< m; i++)
     for (int j=0; j< n; j++)
     zamin[i][j]= 0;
}
//ابعاد زمین:::m*n*/
//تابع print برای نمایش زمین//
void print(int m, int n, int zamin[m][n])
{
 for (int i=0 ; i< n; i++)
 {
 for (int j=0 ; j< m; j++)
 printf("%c ", zamin[i][j]);
 printf ("\n");
 }
}
////////////////////////////////////////////////////////////////////////////////////////
//برای چک کردن جا شدن کشتی در زمین//
int chek_keshti (int m, int n, int *x, int *y, int *jahat, int *type,int zamin[m][n] )
{

 if(((*x < m)&&(*y < n)) && ((*x >= 0) && (*y >= 0)))
 {
 switch (*jahat)
 {
 case 1:
 if(*y-*type>= 0)
 return 1;
 else
 return 0;
 break;
 case 2:
 if(*y+*type <=n)
 return 1;
 else
 return 0;
 break;
 case 3:
 if(*x+*type<= m)
 return 1;
 else
 return 0;
 break;
 case 4:
 if(0<= *x-*type)
 return 1;
 else
 return 0;
 break;
 }
 }
 return 0;
}
//////////////////////////////////////////////////////////////////////////////////////
//برای چک کردن عدم تداخل کشتی ها
int check_keshti2(int m,int n,int zamin[m][n],int x,int y,int jahat,int type)
{
    int i;

    switch(jahat)
    {
        case 1:

            for(i=0;i<type;i++)
            {
                if(zamin[x][y-i]==1)
                    return 0;
                else
                    continue;
            }
            return 1;
            break;

        case 2:

            for(i=0;i<type;i++)
            {
                if(zamin[x][y+i]==1)
                    return 0;
                else
                    continue;
            }
            return 1;
            break;

        case 3:

            for(i=0;i<type;i++)
            {
                if(zamin[x+i][y]==1)
                    return 0;
                else
                    continue;
            }
            return 1;
            break;

        case 4:

            for(i=0;i<type;i++)
            {
                if(zamin[x-i][y]==1)
                    return 0;
                else
                    continue;
            }
            return 1;
            break;
    }
}
////////////////////////////////////////////////////////////////////////////////////////
//برای تغییر زمین که قرار نمایش داده بشه//
void target (int m, int n, int *x, int *y, int zamin[m][n])
{
 if (zamin[*x][*y]== 1)
 zamin[*x][*y]= 42;
 else
 if (zamin[*x][*y]== 0)
 zamin[*x][*y]= 32;
}
//////////////////////////////////////////////////////////////////////////////
//چاپ زمین
void namayesh_target (int m, int n, int *x, int *y, int zamin[m][n])
{
 for (int i=0; i< n; i++)
{

 for (int j=0; j< m; j++)
 {
 if (zamin[i][j]== 42)
 printf ("*");
 if (zamin[i][j]== 32)
 printf (" ");
 if (zamin[i][j]== 0 && zamin[i][j]== 1)
 printf ("?");
 }
}
}
////////////////////////////////////////////////////////////////////////////////////////
//برای جک کردن حضور نقطه هدف در نقشه//
int chek_target (int *x, int *y, int m, int n)
{
 if(((*x >= 0) && (*x < m)) && ((*y >= 0) && (*y < n)))

 {return 1;}
 else{
 return 0;
}
}
////////////////////////////////////////////////////////////////////////////////////////
//برای بمب ها خطی.1 ستونی.2 گوشه.3 دوری.4//
/////////////////////////////////////////
//قرار دادن کشتی در زمین
void set_keshti(int m,int n,int zamin[m][n],int x,int y,int jahat,int type)
{
    int i;

    switch(jahat)
    {

        case 1:

            for(i=0;i<type;i++)
            {
                zamin[x][y-i]=1;
            }

            break;

        case 2:
            for(i=0;i<type;i++)
            {
                zamin[x][y+i]=1;
            }

            break;

        case 3:
            for(i=0;i<type;i++)
            {
                zamin[x+i][y]=1;
            }

            break;

        case 4:
            for(i=0;i<type;i++)
            {
                zamin[x-i][y]=1;
            }

            break;
    }
}
//////////////////////////////////////////////////
//تشخیص نوع کشتی و اطلاعات مربوطه
void ship(char s[],int *x,int *y,int *type,int *jahat)
{
    int i=0,j=3,sum=0;


    *type=(s[0]-48);


    while(s[i]!=44)
        {
            i++;
        }

    while(j<i)
        {
            sum=(sum*10)+(s[j]-48);

            j++;
        }
    *x=sum;

    i=0;j=0;sum=0;

    while(s[j]!=44)
    {
        j++;
    }

        j++;

    while(s[i]!=41)
    {
        i++;
    }
    while(j<i)
    {
        sum=(sum*10)+(s[j]-48);

        j++;
    }
    *y=sum;

    i=0;
    while(s[i]!=32)
    {
        i++;
    }

    i++;

    if((s[i]==85)||(s[i]==117))
    {
        *jahat=1;
    }

    if((s[i]==68)||(s[i]==100))
    {
        *jahat=2;
    }

    if((s[i]==76)||(s[i]==108))
    {
        *jahat=3;
    }

    if((s[i]==114)||(s[i]==82))
    {
        *jahat=4;
    }
}
//////////////////////////////////////////////////////
//خرید کشتی
void poul(int *money,int type)
{
    if(type==1){
        *money=(*money)-80;
        }
    else if(type==2){
        *money=*money-120;
        }
    else if(type==3){
        *money=*money-160;
        }
    else if(type==4){
        *money=*money-200;
        }

}
///////////////////////////////////////////////////////////
//برای چک قابلیت خریدن کشتی
int chek_poul(int *money,int type)
{
    if((type==1)&&(*money>=80))
            return 1;
    else if((type==2)&&(*money>=120)){
            return 1;}
    else if((type==3)&&(*money>=160))
            return 1;
    else if((type==4)&&(*money>=200)){
            return 1;}
    else if((type<1)||(type>4)){
        return -1;}//نوع غیر موجود کشتی

}
///////////////////////////////////////////////////////////
//تابع بررسی برد بازی.در صورت برد ۱ برمیگرداند
int bord(int m,int n,int a[m][n])
{
    int i,j,count=0;

    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(a[i][j]==1)
            {count++;}
        }
    }

    if(count==0)
        return 1;
    else
        return 0;
}
////////////////////////////////////////////////////////////
int main()
{
char player1[25],player2[25];                                            //اسم بازیکنان

char s[50];                                                              //رشته ی معرفی کشتی ها

int m,n,bord1=0,bord2=0;                                                 //اندازه زمین و عدد برای تشخیص برد

int a=0;                                                                 //شمارنده برای بررسی کشتی

int xt,xy;                                                               //مختصات بمب ‍

printf("Please enter player1 name\n");

scanf("%s",player1);                                                     //اسم بازیکن یک

printf("Please enter player2 name\n");

scanf("%s",player2);

printf("Hi.Welcome to battleship.please enter size of map:\n");

scanf("%d%d",&m,&n);

int zamin1[m][n],zamin2[m][n];                                           //تعریف زمین بازی

initializer(m,n,zamin1);initializer(m,n,zamin2);

printf("Hi %s.you have 2100$ money.please enter your ship as following:",player1);

printf("(type)@(x,y)from (direction)\ntype:\n1=1 length ship is 80$\n2=2 length ship is 120$\n3=3 length ship is 160$\n4=4 length ship is 200$\nyou can enter 10 ship:\n");

/////////////////////////////////////////////////////////////////////
int i=1,tedad=3,x,y,type,jahat,money1,money2;                            //مختصات و نوع کشتی و پول بازی

money1=2100;money2=2100;                                                      //پول های بازیکنان یک و دو


///////////////////////////////////////////
printf("Hi %s.you have 2100$ money.please enter your ship as following:",player2);

printf("(type)@(x,y)from (direction)\ntype:\n1=1 length ship is 80$\n2=2 length ship is 120$\n3=3 length ship is 160$\n4=4 length ship is 200$\nyou can enter 10 ship\n:");

/////////////////////////////////////////////////////////////////////
i=1;

while(i<=tedad)
{
gets(s);//گرفتن مختصات کشتی بازیکن دو

ship(s,&x,&y,&type,&jahat);

x--;y--;

a=(chek_keshti(m,n,&x,&y,&jahat,&type,zamin2)+check_keshti2(m,n,zamin2,x,y,jahat,type));

    if(chek_poul(&money2,type)==-1)
            {
                printf("unavaiable ship");
                continue;
            }

    else if(chek_poul(&money2,type)==1){

    if(a==2)
        {

        poul(&money2,type);

        set_keshti(m,n,zamin2,x,y,jahat,type);

        }
    else
    {
        printf("You can't choose here,please choose again:\n");
        continue;
    }}
    i++;
}


    return 0;
}
